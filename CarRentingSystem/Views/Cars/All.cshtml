@model AllCarsViewModel

@{
    this.ViewData["Title"] = "All Cars";
}

<div class="container m-3">
    <form method="get">
        <div class="form-row">
            <div class="col-md-4 mb-3">
                <label asp-for="SearchTerms"></label>
                <input asp-for="SearchTerms" class="form-control" placeholder="BMW E90 ...">
            </div>
            <div class="col-md-4 mb-3">
                <label asp-for="Brand"></label>
                <select asp-for="Brand" class="form-control">
                    <option value="">All</option>
                    @foreach (var brand in Model.Brands)
                    {
                        <option value="@brand">@brand</option>
                    }
                </select>
            </div>
            <div class="col-md-4 mb-3">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Date Created</option>
                    <option value="1">Year</option>
                    <option value="2">Brand and Model</option>
                </select>
            </div>
        </div>
        <button class="btn btn-primary" type="submit">Search</button>
    </form>
</div>

<div class="row">
    @foreach (var car in Model.Cars)
    {
        <div class="col-md-4">
            <div class="card mb-3 card-size">
                <img class="card-img-top card-image" src="@car.ImageUrl" alt="@car.Brand @car.Model - @car.Year (@car.Category)">
                <div class="card-body text-center">
                    <h5 class="card-title text-center">@car.Year  @car.Brand @car.Model (@car.Category)</h5>
                    <a asp-controller="Cars" asp-action="Details" asp-route-id="@car.Id" class="btn btn-primary">View More</a>
                </div>
            </div>
        </div>
    }
</div>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = (int)Math.Ceiling((double)Model.TotalCars / AllCarsViewModel.CarsPerPage);
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Cars"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-brand="@Model.Brand"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-sorting="@((int)Model.Sorting)">
                Previous
            </a>
        </li>
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Cars"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage - 1)"
                   asp-route-brand="@Model.Brand"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-sorting="@((int)Model.Sorting)">
                    @(Model.CurrentPage - 1)
                </a>
            </li>
        }
        <li class="page-item active">
            <a class="page-link"
               asp-controller="Cars"
               asp-action="All"
               asp-route-currentPage="@Model.CurrentPage"
               asp-route-brand="@Model.Brand"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-sorting="@((int)Model.Sorting)">
                @Model.CurrentPage
            </a>
        </li>
        @if (Model.CurrentPage != maxPage)
        {
            <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                <a class="page-link"
                   asp-controller="Cars"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-brand="@Model.Brand"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-sorting="@((int)Model.Sorting)">
                    @(Model.CurrentPage + 1)
                </a>
            </li>
        }
        <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Cars"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-brand="@Model.Brand"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-sorting="@((int)Model.Sorting)">
                Next
            </a>
        </li>
    </ul>
</nav>
